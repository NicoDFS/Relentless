// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/loomnetwork/gamechain/types/zb/zb_enums/zb_enums.proto-cs
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Loom.Google.Protobuf;
using pbc = global::Loom.Google.Protobuf.Collections;
using pbr = global::Loom.Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loom.ZombieBattleground.Protobuf {

  /// <summary>Holder for reflection information generated from github.com/loomnetwork/gamechain/types/zb/zb_enums/zb_enums.proto-cs</summary>
  public static partial class ZbEnumsReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/loomnetwork/gamechain/types/zb/zb_enums/zb_enums.proto-cs</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZbEnumsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkRnaXRodWIuY29tL2xvb21uZXR3b3JrL2dhbWVjaGFpbi90eXBlcy96Yi96",
            "Yl9lbnVtcy96Yl9lbnVtcy5wcm90by1jcyJTCgtDYXJkVmFyaWFudCJECgRF",
            "bnVtEgwKCFN0YW5kYXJkEAASCgoGQmFja2VyEAESCwoHTGltaXRlZBACEgsK",
            "B0JpbmFuY2UQAxIICgRUcm9uEAQiOgoIQ2FyZEtpbmQiLgoERW51bRINCglV",
            "TkRFRklORUQQABIMCghDUkVBVFVSRRABEgkKBVNQRUxMEAIiWgoMQ3JlYXR1",
            "cmVSYW5rIkoKBEVudW0SDQoJVU5ERUZJTkVEEAASCgoGTUlOSU9OEAESCwoH",
            "T0ZGSUNFUhACEg0KCUNPTU1BTkRFUhADEgsKB0dFTkVSQUwQBCJDCghDYXJk",
            "VHlwZSI3CgRFbnVtEg0KCVVuZGVmaW5lZBAAEgoKBldBTEtFUhABEgkKBUZF",
            "UkFMEAISCQoFSEVBVlkQAyJvCgdGYWN0aW9uImQKBEVudW0SCAoETk9ORRAA",
            "EggKBEZJUkUQARIJCgVXQVRFUhACEgkKBUVBUlRIEAMSBwoDQUlSEAQSCAoE",
            "TElGRRAFEgkKBVRPWElDEAYSCAoESVRFTRAHEgoKBk9USEVSUxAIIp0BCg9V",
            "bmlxdWVBbmltYXRpb24iiQEKBEVudW0SCAoETm9uZRAAEhMKD1NoYW1tYW5u",
            "QXJyaXZhbBABEhEKDVpWaXJ1c0Fycml2YWwQAhIPCgtaZXV6QXJyaXZhbBAD",
            "EhMKD0NlcmJlcnVzQXJyaXZhbBAEEhIKDlR6dW5hbXlBcnJpdmFsEAUSFQoR",
            "Q2hlcm5vQmlsbEFycml2YWwQBiKrAQoGVGFyZ2V0IqABCgRFbnVtEggKBE5P",
            "TkUQABIKCgZQTEFZRVIQARIPCgtQTEFZRVJfQ0FSRBACEhQKEFBMQVlFUl9B",
            "TExfQ0FSRFMQAxIMCghPUFBPTkVOVBAEEhEKDU9QUE9ORU5UX0NBUkQQBRIW",
            "ChJPUFBPTkVOVF9BTExfQ0FSRFMQBhINCglBTExfQ0FSRFMQBxIHCgNBTEwQ",
            "CBIKCgZJVFNFTEYQCSKbAQoLU2tpbGxUYXJnZXQiiwEKBEVudW0SCAoETk9O",
            "RRAAEgoKBlBMQVlFUhABEg8KC1BMQVlFUl9DQVJEEAISFAoQUExBWUVSX0FM",
            "TF9DQVJEUxADEgwKCE9QUE9ORU5UEAQSEQoNT1BQT05FTlRfQ0FSRBAFEhYK",
            "Ek9QUE9ORU5UX0FMTF9DQVJEUxAGEg0KCUFMTF9DQVJEUxAHIp0DChdHYW1l",
            "TWVjaGFuaWNEZXNjcmlwdGlvbiKBAwoERW51bRINCglVTkRFRklORUQQABIK",
            "CgZBVFRBQ0sQARIJCgVERUFUSBACEgsKB0RFTEFZRUQQAxILCgdERVNUUk9Z",
            "EAQSCgoGREVWT1VSEAUSDAoIRElTVFJBQ1QQBhIHCgNFTkQQBxIJCgVFTlRS",
            "WRAIEgkKBUZFUkFMEAkSCQoFRkxBU0gQChIKCgZGUkVFWkUQCxIJCgVHVUFS",
            "RBAMEgkKBUhFQVZZEA0SDAoIT1ZFUkZMT1cQDhIICgRSQUdFEA8SDQoJUkVB",
            "TklNQVRFEBASCwoHU0hBVFRFUhAREgkKBVNXSU5HEBISCAoEVFVSThATEg4K",
            "CkdPVF9EQU1BR0UQFBIOCgpBVF9ERUZFTlNFEBUSCwoHSU5fSEFORBAWEg0K",
            "CUtJTExfVU5JVBAXEg0KCVBFUk1BTkVOVBAYEgkKBUJMSVRaEBkSCwoHUkVT",
            "VE9SRRAaEgwKCENIQUlOU0FXEBsSDwoLU1VQRVJfU0VSVU0QHBIICgRBVVJB",
            "EB0iOAoRQXR0YWNrUmVzdHJpY3Rpb24iIwoERW51bRIHCgNBTlkQABISCg5P",
            "TkxZX0RJRkZFUkVOVBABIrABChNDYXJkQWJpbGl0eUJ1ZmZUeXBlIpgBCgRF",
            "bnVtEggKBE5PTkUQABIJCgVHVUFSRBABEgsKB0RFRkVOQ0UQAhIJCgVIRUFW",
            "WRADEgoKBldFQVBPThAEEggKBFJVU0gQBRIKCgZBVFRBQ0sQBhIKCgZGUkVF",
            "WkUQBxIKCgZEQU1BR0UQCBINCglIRUFMX0FMTFkQCRILCgdERVNUUk9ZEAoS",
            "DQoJUkVBTklNQVRFEAsiQQoPQWJpbGl0eUFjdGl2aXR5Ii4KBEVudW0SDQoJ",
            "VU5ERUZJTkVEEAASCwoHUEFTU0lWRRABEgoKBkFDVElWRRACIrwBCg5BYmls",
            "aXR5VHJpZ2dlciKpAQoERW51bRINCglVTkRFRklORUQQABIICgRUVVJOEAES",
            "CQoFRU5UUlkQAhIHCgNFTkQQAxIKCgZBVFRBQ0sQBBIJCgVERUFUSBAFEg0K",
            "CVBFUk1BTkVOVBAGEg4KCkdPVF9EQU1BR0UQBxIOCgpBVF9ERUZFTkNFEAgS",
            "CwoHSU5fSEFORBAJEg0KCUtJTExfVU5JVBAKEggKBFJBR0UQCxIICgRBVVJB",
            "EAwi1QIKDUFiaWxpdHlFZmZlY3QiwwIKBEVudW0SCAoETk9ORRAAEhYKEk1B",
            "U1NJVkVfV0FURVJfV0FWRRABEhAKDE1BU1NJVkVfRklSRRACEhUKEU1BU1NJ",
            "VkVfTElHSFROSU5HEAMSFQoRTUFTU0lWRV9UT1hJQ19BTEwQBBIPCgtUQVJH",
            "RVRfUk9DSxAFEg8KC1RBUkdFVF9GSVJFEAYSDwoLVEFSR0VUX0xJRkUQBxIQ",
            "CgxUQVJHRVRfVE9YSUMQCBIQCgxUQVJHRVRfV0FURVIQCRIbChdUQVJHRVRf",
            "QURKVVNUTUVOVFNfQk9NQhAKEhAKDFNUVU5fRlJFRVpFUxALEhoKFlNUVU5f",
            "T1JfREFNQUdFX0ZSRUVaRVMQDBIaChZUQVJHRVRfQURKVVNUTUVOVFNfQUlS",
            "EA0SEQoNSEVBTF9ESVJFQ1RMWRAOEggKBEhFQUwQDyLIFwoLQWJpbGl0eVR5",
            "cGUiuBcKBEVudW0SDQoJVU5ERUZJTkVEEAASCAoESEVBTBABEhUKEU1PRElG",
            "SUNBVE9SX1NUQVRTEAISDwoLQ0hBTkdFX1NUQVQQAxIICgRTVFVOEAQSHgoa",
            "U1RVTl9PUl9EQU1BR0VfQURKVVNUTUVOVFMQBRIJCgVTUFVSVBAGEhAKDEFE",
            "RF9HT09fVklBTBAHEhMKD0FERF9HT09fQ0FSUklFUhAIEgcKA0RPVBAJEgoK",
            "BlNVTU1PThAKEhAKDFNQRUxMX0FUVEFDSxALEhIKDk1BU1NJVkVfREFNQUdF",
            "EAwSHQoZREFNQUdFX1RBUkdFVF9BREpVU1RNRU5UUxANEhEKDURBTUFHRV9U",
            "QVJHRVQQDhIPCgtDQVJEX1JFVFVSThAPEgoKBldFQVBPThAQEiQKIENIQU5H",
            "RV9TVEFUX09GX0NSRUFUVVJFU19CWV9UWVBFEBESIwofQVRUQUNLX05VTUJF",
            "Ul9PRl9USU1FU19QRVJfVFVSThASEg0KCURSQVdfQ0FSRBATEiQKIERFVk9V",
            "Ul9aT01CSUVTX0FORF9DT01CSU5FX1NUQVRTEBQSGAoUREVTVFJPWV9VTklU",
            "X0JZX1RZUEUQFRIeChpMT1dFUl9DT1NUX09GX0NBUkRfSU5fSEFORBAWEhAK",
            "DE9WRVJGTE9XX0dPTxAXEgwKCExPU0VfR09PEBgSGQoVRElTQUJMRV9ORVhU",
            "X1RVUk5fR09PEBkSCAoEUkFHRRAaEhAKDEZSRUVaRV9VTklUUxAbEhwKGFRB",
            "S0VfREFNQUdFX1JBTkRPTV9FTkVNWRAcEhsKF1RBS0VfQ09OVFJPTF9FTkVN",
            "WV9VTklUEB0SCQoFR1VBUkQQHhIXChNERVNUUk9ZX0ZST1pFTl9VTklUEB8S",
            "IQodVVNFX0FMTF9HT09fVE9fSU5DUkVBU0VfU1RBVFMQIBIWChJGSVJTVF9V",
            "TklUX0lOX1BMQVkQIRIoCiRBTExZX1VOSVRTX09GX1RZUEVfSU5fUExBWV9H",
            "RVRfU1RBVFMQIhImCiJEQU1BR0VfRU5FTVlfVU5JVFNfQU5EX0ZSRUVaRV9U",
            "SEVNECMSKQolUkVUVVJOX1VOSVRTX09OX0JPQVJEX1RPX09XTkVSU19ERUNL",
            "UxAkEikKJVRBS0VfVU5JVF9UWVBFX1RPX0FESkFDRU5UX0FMTFlfVU5JVFMQ",
            "JRIkCiBFTkVNWV9USEFUX0FUVEFDS1NfQkVDT01FX0ZST1pFThAmEh8KG1RB",
            "S0VfVU5JVF9UWVBFX1RPX0FMTFlfVU5JVBAnEigKJFJFVklWRV9ESUVEX1VO",
            "SVRTX09GX1RZUEVfRlJPTV9NQVRDSBAoEiIKHkNIQU5HRV9TVEFUX1VOVElM",
            "TF9FTkRfT0ZfVFVSThApEhMKD0FUVEFDS19PVkVSTE9SRBAqEhwKGEFESkFD",
            "RU5UX1VOSVRTX0dFVF9IRUFWWRArEiAKHEZSRUVaRV9OVU1CRVJfT0ZfUkFO",
            "RE9NX0FMTFkQLBIcChhBRERfQ0FSRF9CWV9OQU1FX1RPX0hBTkQQLRIqCiZE",
            "RUFMX0RBTUFHRV9UT19USElTX0FORF9BREpBQ0VOVF9VTklUUxAuEgkKBVNX",
            "SU5HEC8SMgouVEFLRV9ERUZFTlNFX0lGX09WRVJMT1JEX0hBU19MRVNTX0RF",
            "RkVOU0VfVEhBThAwEjIKLkdBSU5fTlVNQkVSX09GX0xJRkVfRk9SX0VBQ0hf",
            "REFNQUdFX1RISVNfREVBTFMQMRIoCiRBRERJVElPTkFMX0RBTUFHRV9UT19I",
            "RUFWWV9JTl9BVFRBQ0sQMhIPCgtVTklUX1dFQVBPThAzEiYKIlRBS0VfREFN",
            "QUdFX0FUX0VORF9PRl9UVVJOX1RPX1RISVMQNBIiCh5ERUxBWUVEX0xPU0Vf",
            "SEVBVllfR0FJTl9BVFRBQ0sQNRIXChNERUxBWUVEX0dBSU5fQVRUQUNLEDYS",
            "EgoOUkVBTklNQVRFX1VOSVQQNxITCg9QUklPUklUWV9BVFRBQ0sQOBIkCiBE",
            "RVNUUk9ZX1RBUkdFVF9VTklUX0FGVEVSX0FUVEFDSxA5EiMKH0NPU1RTX0xF",
            "U1NfSUZfQ0FSRF9UWVBFX0lOX0hBTkQQOhIpCiVSRVRVUk5fVU5JVFNfT05f",
            "Qk9BUkRfVE9fT1dORVJTX0hBTkRTEDsSLAooUkVQTEFDRV9VTklUU19XSVRI",
            "X1RZUEVfT05fU1RST05HRVJfT05FUxA8Eh4KGlJFU1RPUkVfREVGX1JBTkRP",
            "TUxZX1NQTElUED0SHAoYQURKQUNFTlRfVU5JVFNfR0VUX0dVQVJEED4SGQoV",
            "U1VNTU9OX1VOSVRfRlJPTV9IQU5EED8SHgoaREFNQUdFX0FORF9ESVNUUkFD",
            "VF9UQVJHRVQQQBInCiNEUkFXX0NBUkRfSUZfREFNQUdFRF9aT01CSUVfSU5f",
            "UExBWRBBEi8KK1RBS0VfU1RBVF9JRl9PVkVSTE9SRF9IQVNfTEVTU19ERUZF",
            "TlNFX1RIQU4QQhIpCiVEQU1BR0VfT1ZFUkxPUkRfT05fQ09VTlRfSVRFTVNf",
            "UExBWUVEEEMSHQoZU0hVRkZMRV9USElTX0NBUkRfVE9fREVDSxBEEikKJVRB",
            "S0VfREVGRU5TRV9UT19PVkVSTE9SRF9XSVRIX0RFRkVOU0UQRRImCiJQVVRf",
            "UkFORE9NX1VOSVRfRlJPTV9ERUNLX09OX0JPQVJEEEYSDAoIRElTVFJBQ1QQ",
            "RxInCiNEQU1BR0VfVEFSR0VUX0ZSRUVaRV9JVF9JRl9TVVJWSVZFUxBIEhgK",
            "FERFU1RST1lfVU5JVF9CWV9DT1NUEEkSKAokREFNQUdFX0VORU1ZX09SX1JF",
            "U1RPUkVfREVGRU5TRV9BTExZEEoSFwoTVEFLRV9TV0lOR19UT19VTklUUxBL",
            "Ei0KKURFTEFZRURfUExBQ0VfQ09QSUVTX0lOX1BMQVlfREVTVFJPWV9VTklU",
            "EEwSGwoXQURKQUNFTlRfVU5JVFNfR0VUX1NUQVQQTRIdChlFWFRSQV9HT09f",
            "SUZfVU5JVF9JTl9QTEFZEE4SEQoNREVTVFJPWV9VTklUUxBPEiEKHURFQUxf",
            "REFNQUdFX1RPX1VOSVRfQU5EX1NXSU5HEFASGwoXU0VUX0FUVEFDS19BVkFJ",
            "TEFCSUxJVFkQURIXChNDSE9PU0FCTEVfQUJJTElUSUVTEFISIwofQ09TVFNf",
            "TEVTU19JRl9DQVJEX1RZUEVfSU5fUExBWRBTEgwKCEdBSU5fR09PEFQSCQoF",
            "QkxJVFoQVRIYChREUkFXX0NBUkRfQllfRkFDVElPThBWEhcKE0RFU1RST1lf",
            "VEFSR0VUX1VOSVQQVxIJCgVBR0lMRRBYEiAKHENIQU5HRV9TVEFUX09GX0NB",
            "UkRTX0lOX0hBTkQQWRIWChJHSVZFX0JVRkZTX1RPX1VOSVQQWhIaChZESVND",
            "QVJEX0NBUkRfRlJPTV9IQU5EEFsSFQoRR0VUX0dPT19USElTX1RVUk4QXBIO",
            "CgpDT1NUU19MRVNTEF0SFwoTRklMTF9CT0FSRF9CWV9VTklUUxBeEioKJkRF",
            "QUxfREFNQUdFX1RPX1RBUkdFVF9USEFUX0FUVEFDS19USElTEF8SDwoLQ0hB",
            "TkdFX0NPU1QQYBIgChxHQUlOX1NUQVRTX09GX0FESkFDRU5UX1VOSVRTEGES",
            "HAoYRElTVFJBQ1RfQU5EX0NIQU5HRV9TVEFUEGISFwoTREFNQUdFX0FORF9E",
            "SVNUUkFDVBBjEiQKIFBVVF9VTklUU19GUk9NX0RJU0NBUkRfSU5UT19QTEFZ",
            "EGQSJAogUFVUX1VOSVRTX0ZST05fTElCUkFSWV9JTlRPX1BMQVkQZRIVChFC",
            "TE9DS19UQUtFX0RBTUFHRRBmEiEKHVRBS0VfVU5JVF9UWVBFX1RPX1RBUkdF",
            "VF9VTklUEGcSGQoVQ0hBTkdFX1NUQVRfVEhJU19UVVJOEGgi4QUKEUFiaWxp",
            "dHlTdWJUcmlnZ2VyIssFCgRFbnVtEggKBE5vbmUQABIWChJPbmx5VGhpc1Vu",
            "aXRJblBsYXkQARIbChdBbGxPdGhlckFsbHlVbml0c0luUGxheRACEhYKEkFs",
            "bEFsbHlVbml0c0luUGxheRADEg4KClJhbmRvbVVuaXQQBBIXChNBbGxFbmVt",
            "eVVuaXRzSW5QbGF5EAUSHwobQWxsQWxseVVuaXRzQnlGYWN0aW9uSW5QbGF5",
            "EAYSHgoaRm9yRWFjaEZhY3Rpb25PZlVuaXRJbkhhbmQQBxIfChtJZkhhc1Vu",
            "aXRzV2l0aEZhY3Rpb25JblBsYXkQCBIeChpBbGx5VW5pdHNCeUZhY3Rpb25U",
            "aGF0Q29zdBAJEhAKDFlvdXJPdmVybG9yZBAKEhQKEFBlcm1hbmVudENoYW5n",
            "ZXMQCxIaChZIYXNDaGFuZ2VzSW5QYXJhbWV0ZXJzEAwSGQoVTGVzc0RlZlRo",
            "YW5Jbk9wcG9uZW50EA0SHgoaT3ZlcmxvcmREZWZlbnNlRXF1YWxPckxlc3MQ",
            "DhIWChJPbmx5VGhpc0NhcmRJbkhhbmQQDxISCg5BbGxDYXJkc0luSGFuZBAQ",
            "Eh4KGkNhcmRDb3N0TW9yZVRoYW5Db3N0T2ZUaGlzEBESGgoWRm9yRWFjaEVu",
            "ZW15VW5pdEluUGxheRASEhkKFUZvckVhY2hBbGx5VW5pdEluUGxheRATEhoK",
            "FklmSGF2ZUZld2VyVW5pdHNJblBsYXkQFBIWChJUb09wcG9uZW50T3Zlcmxv",
            "cmQQFRIeChpVbnRpbFN0YXJ0T2ZOZXh0UGxheWVyVHVybhAWEhQKEER1cmlu",
            "Z0NhcmRJbkhhbmQQFxIVChFGb3JFYWNoVW5pdEluUGxheRAYEg8KC0hpZ2hl",
            "c3RDb3N0EBkSFQoRRXF1YWxUb1VuaXRBdHRhY2sQGhIWChJOdW1iZXJPZlVu",
            "c3BlbnRHb28QGyJpCgRab25lImEKBHR5cGUSCAoEUExBWRAAEggKBERFQ0sQ",
            "ARIICgRIQU5EEAISDQoJR1JBVkVZQVJEEAMSEgoOUkVNT1ZFRlJPTUdBTUUQ",
            "BBIMCghTRVRBU0lERRAFEgoKBlNFQ1JFVBAGIsYBChBQbGF5ZXJBY3Rpb25U",
            "eXBlIrEBCgRFbnVtEggKBE5vbmUQABILCgdFbmRUdXJuEAESDAoITXVsbGln",
            "YW4QAhIMCghDYXJkUGxheRADEg4KCkNhcmRBdHRhY2sQBBITCg9DYXJkQWJp",
            "bGl0eVVzZWQQBRIVChFPdmVybG9yZFNraWxsVXNlZBAGEg4KCkxlYXZlTWF0",
            "Y2gQBxIMCghSYW5rQnVmZhAIEhwKGENoZWF0RGVzdHJveUNhcmRzT25Cb2Fy",
            "ZBAJIswDChFPdmVybG9yZFNraWxsVHlwZSK2AwoERW51bRIICgROT05FEAAS",
            "CAoEUFVTSBABEggKBERSQVcQAhIPCgtXSU5EX1NISUVMRBADEgwKCExFVklU",
            "QVRFEAQSCwoHUkVUUkVBVBAFEgoKBkhBUkRFThAGEg4KClNUT05FX1NLSU4Q",
            "BxILCgdGT1JUSUZZEAgSCwoHUEhBTEFOWBAJEgwKCEZPUlRSRVNTEAoSDQoJ",
            "RklSRV9CT0xUEAsSCgoGUkFCSUVTEAwSDAoIRklSRUJBTEwQDRIPCgtNQVNT",
            "X1JBQklFUxAOEhEKDU1FVEVPUl9TSE9XRVIQDxIRCg1IRUFMSU5HX1RPVUNI",
            "EBASCAoETUVORBAREg0KCVJFU1NVUkVDVBASEgsKB0VOSEFOQ0UQExINCglS",
            "RUFOSU1BVEUQFBIPCgtQT0lTT05fREFSVBAVEg8KC1RPWElDX1BPV0VSEBYS",
            "DAoIQlJFQUtPVVQQFxIKCgZJTkZFQ1QQGBIMCghFUElERU1JQxAZEgoKBkZS",
            "RUVaRRAaEgwKCElDRV9CT0xUEBsSDAoISUNFX1dBTEwQHBILCgdTSEFUVEVS",
            "EB0SDAoIQkxJWlpBUkQQHiJGCgRTdGF0Ij4KBEVudW0SDQoJVU5ERUZJTkVE",
            "EAASCwoHREVGRU5TRRABEgoKBkhFQUxUSBABEgoKBkRBTUFHRRACGgIQASIx",
            "ChFVbml0U3BlY2lhbFN0YXR1cyIcCgRFbnVtEggKBE5PTkUQABIKCgZGUk9a",
            "RU4QASKIAQoGQUlUeXBlIn4KBEVudW0SDQoJVU5ERUZJTkVEEAASDAoIQkxJ",
            "VFpfQUkQARIOCgpERUZFTlNFX0FJEAISDAoITUlYRURfQUkQAxISCg5NSVhF",
            "RF9CTElUWl9BSRAEEhEKDVRJTUVfQkxJVFpfQUkQBRIUChBNSVhFRF9ERUZF",
            "TlNFX0FJEAYifwoURXhwZXJpZW5jZUFjdGlvblR5cGUiZwoERW51bRIQCgxL",
            "aWxsT3ZlcmxvcmQQABIOCgpLaWxsTWluaW9uEAESDAoIUGxheUNhcmQQAhIX",
            "ChNBY3RpdmF0ZVJhbmtBYmlsaXR5EAMSFgoSVXNlT3ZlcmxvcmRBYmlsaXR5",
            "EAQiMgoRQ2FyZEtpbmRFbnVtVmFsdWUSHQoFdmFsdWUYASABKA4yDi5DYXJk",
            "S2luZC5FbnVtIjAKEEZhY3Rpb25FbnVtVmFsdWUSHAoFdmFsdWUYASABKA4y",
            "DS5GYWN0aW9uLkVudW0iOgoVQ3JlYXR1cmVSYW5rRW51bVZhbHVlEiEKBXZh",
            "bHVlGAEgASgOMhIuQ3JlYXR1cmVSYW5rLkVudW0iMgoRQ2FyZFR5cGVFbnVt",
            "VmFsdWUSHQoFdmFsdWUYASABKA4yDi5DYXJkVHlwZS5FbnVtIkAKGFVuaXF1",
            "ZUFuaW1hdGlvbkVudW1WYWx1ZRIkCgV2YWx1ZRgBIAEoDjIVLlVuaXF1ZUFu",
            "aW1hdGlvbi5FbnVtKjgKGk92ZXJsb3JkU2tpbGxTZWxlY3Rpb25UeXBlEgsK",
            "B1ByaW1hcnkQABINCglTZWNvbmRhcnkQAUIjqgIgTG9vbS5ab21iaWVCYXR0",
            "bGVncm91bmQuUHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Loom.ZombieBattleground.Protobuf.OverlordSkillSelectionType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardVariant), global::Loom.ZombieBattleground.Protobuf.CardVariant.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.CardVariant.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardKind), global::Loom.ZombieBattleground.Protobuf.CardKind.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.CardKind.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CreatureRank), global::Loom.ZombieBattleground.Protobuf.CreatureRank.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.CreatureRank.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardType), global::Loom.ZombieBattleground.Protobuf.CardType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.CardType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.Faction), global::Loom.ZombieBattleground.Protobuf.Faction.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.Faction.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.UniqueAnimation), global::Loom.ZombieBattleground.Protobuf.UniqueAnimation.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.UniqueAnimation.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.Target), global::Loom.ZombieBattleground.Protobuf.Target.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.Target.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.SkillTarget), global::Loom.ZombieBattleground.Protobuf.SkillTarget.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.SkillTarget.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.GameMechanicDescription), global::Loom.ZombieBattleground.Protobuf.GameMechanicDescription.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.GameMechanicDescription.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AttackRestriction), global::Loom.ZombieBattleground.Protobuf.AttackRestriction.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AttackRestriction.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardAbilityBuffType), global::Loom.ZombieBattleground.Protobuf.CardAbilityBuffType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.CardAbilityBuffType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AbilityActivity), global::Loom.ZombieBattleground.Protobuf.AbilityActivity.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AbilityActivity.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AbilityTrigger), global::Loom.ZombieBattleground.Protobuf.AbilityTrigger.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AbilityTrigger.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AbilityEffect), global::Loom.ZombieBattleground.Protobuf.AbilityEffect.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AbilityEffect.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AbilityType), global::Loom.ZombieBattleground.Protobuf.AbilityType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AbilityType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AbilitySubTrigger), global::Loom.ZombieBattleground.Protobuf.AbilitySubTrigger.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AbilitySubTrigger.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.Zone), global::Loom.ZombieBattleground.Protobuf.Zone.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.Zone.Types.type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.PlayerActionType), global::Loom.ZombieBattleground.Protobuf.PlayerActionType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.PlayerActionType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.OverlordSkillType), global::Loom.ZombieBattleground.Protobuf.OverlordSkillType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.OverlordSkillType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.Stat), global::Loom.ZombieBattleground.Protobuf.Stat.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.Stat.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.UnitSpecialStatus), global::Loom.ZombieBattleground.Protobuf.UnitSpecialStatus.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.UnitSpecialStatus.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.AIType), global::Loom.ZombieBattleground.Protobuf.AIType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.AIType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.ExperienceActionType), global::Loom.ZombieBattleground.Protobuf.ExperienceActionType.Parser, null, null, new[]{ typeof(global::Loom.ZombieBattleground.Protobuf.ExperienceActionType.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardKindEnumValue), global::Loom.ZombieBattleground.Protobuf.CardKindEnumValue.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.FactionEnumValue), global::Loom.ZombieBattleground.Protobuf.FactionEnumValue.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CreatureRankEnumValue), global::Loom.ZombieBattleground.Protobuf.CreatureRankEnumValue.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardTypeEnumValue), global::Loom.ZombieBattleground.Protobuf.CardTypeEnumValue.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.UniqueAnimationEnumValue), global::Loom.ZombieBattleground.Protobuf.UniqueAnimationEnumValue.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OverlordSkillSelectionType {
    [pbr::OriginalName("Primary")] Primary = 0,
    [pbr::OriginalName("Secondary")] Secondary = 1,
  }

  #endregion

  #region Messages
  public sealed partial class CardVariant : pb::IMessage<CardVariant> {
    private static readonly pb::MessageParser<CardVariant> _parser = new pb::MessageParser<CardVariant>(() => new CardVariant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardVariant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardVariant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardVariant(CardVariant other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardVariant Clone() {
      return new CardVariant(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardVariant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardVariant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardVariant other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CardVariant message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("Standard")] Standard = 0,
        [pbr::OriginalName("Backer")] Backer = 1,
        [pbr::OriginalName("Limited")] Limited = 2,
        [pbr::OriginalName("Binance")] Binance = 3,
        [pbr::OriginalName("Tron")] Tron = 4,
      }

    }
    #endregion

  }

  public sealed partial class CardKind : pb::IMessage<CardKind> {
    private static readonly pb::MessageParser<CardKind> _parser = new pb::MessageParser<CardKind>(() => new CardKind());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardKind> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKind() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKind(CardKind other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKind Clone() {
      return new CardKind(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardKind);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardKind other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardKind other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CardKind message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("CREATURE")] Creature = 1,
        [pbr::OriginalName("SPELL")] Spell = 2,
      }

    }
    #endregion

  }

  public sealed partial class CreatureRank : pb::IMessage<CreatureRank> {
    private static readonly pb::MessageParser<CreatureRank> _parser = new pb::MessageParser<CreatureRank>(() => new CreatureRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatureRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRank(CreatureRank other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRank Clone() {
      return new CreatureRank(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatureRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatureRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatureRank other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreatureRank message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("MINION")] Minion = 1,
        [pbr::OriginalName("OFFICER")] Officer = 2,
        [pbr::OriginalName("COMMANDER")] Commander = 3,
        [pbr::OriginalName("GENERAL")] General = 4,
      }

    }
    #endregion

  }

  public sealed partial class CardType : pb::IMessage<CardType> {
    private static readonly pb::MessageParser<CardType> _parser = new pb::MessageParser<CardType>(() => new CardType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardType(CardType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardType Clone() {
      return new CardType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CardType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("Undefined")] Undefined = 0,
        [pbr::OriginalName("WALKER")] Walker = 1,
        [pbr::OriginalName("FERAL")] Feral = 2,
        [pbr::OriginalName("HEAVY")] Heavy = 3,
      }

    }
    #endregion

  }

  public sealed partial class Faction : pb::IMessage<Faction> {
    private static readonly pb::MessageParser<Faction> _parser = new pb::MessageParser<Faction>(() => new Faction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Faction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Faction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Faction(Faction other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Faction Clone() {
      return new Faction(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Faction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Faction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Faction other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Faction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("FIRE")] Fire = 1,
        [pbr::OriginalName("WATER")] Water = 2,
        [pbr::OriginalName("EARTH")] Earth = 3,
        [pbr::OriginalName("AIR")] Air = 4,
        [pbr::OriginalName("LIFE")] Life = 5,
        [pbr::OriginalName("TOXIC")] Toxic = 6,
        [pbr::OriginalName("ITEM")] Item = 7,
        [pbr::OriginalName("OTHERS")] Others = 8,
      }

    }
    #endregion

  }

  public sealed partial class UniqueAnimation : pb::IMessage<UniqueAnimation> {
    private static readonly pb::MessageParser<UniqueAnimation> _parser = new pb::MessageParser<UniqueAnimation>(() => new UniqueAnimation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UniqueAnimation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimation(UniqueAnimation other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimation Clone() {
      return new UniqueAnimation(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UniqueAnimation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UniqueAnimation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UniqueAnimation other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UniqueAnimation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("ShammannArrival")] ShammannArrival = 1,
        [pbr::OriginalName("ZVirusArrival")] ZvirusArrival = 2,
        [pbr::OriginalName("ZeuzArrival")] ZeuzArrival = 3,
        [pbr::OriginalName("CerberusArrival")] CerberusArrival = 4,
        [pbr::OriginalName("TzunamyArrival")] TzunamyArrival = 5,
        [pbr::OriginalName("ChernoBillArrival")] ChernoBillArrival = 6,
      }

    }
    #endregion

  }

  public sealed partial class Target : pb::IMessage<Target> {
    private static readonly pb::MessageParser<Target> _parser = new pb::MessageParser<Target>(() => new Target());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Target> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target(Target other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Target Clone() {
      return new Target(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Target);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Target other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Target other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Target message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("PLAYER")] Player = 1,
        [pbr::OriginalName("PLAYER_CARD")] PlayerCard = 2,
        [pbr::OriginalName("PLAYER_ALL_CARDS")] PlayerAllCards = 3,
        [pbr::OriginalName("OPPONENT")] Opponent = 4,
        [pbr::OriginalName("OPPONENT_CARD")] OpponentCard = 5,
        [pbr::OriginalName("OPPONENT_ALL_CARDS")] OpponentAllCards = 6,
        [pbr::OriginalName("ALL_CARDS")] AllCards = 7,
        [pbr::OriginalName("ALL")] All = 8,
        [pbr::OriginalName("ITSELF")] Itself = 9,
      }

    }
    #endregion

  }

  public sealed partial class SkillTarget : pb::IMessage<SkillTarget> {
    private static readonly pb::MessageParser<SkillTarget> _parser = new pb::MessageParser<SkillTarget>(() => new SkillTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTarget(SkillTarget other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTarget Clone() {
      return new SkillTarget(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillTarget other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SkillTarget message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("PLAYER")] Player = 1,
        [pbr::OriginalName("PLAYER_CARD")] PlayerCard = 2,
        [pbr::OriginalName("PLAYER_ALL_CARDS")] PlayerAllCards = 3,
        [pbr::OriginalName("OPPONENT")] Opponent = 4,
        [pbr::OriginalName("OPPONENT_CARD")] OpponentCard = 5,
        [pbr::OriginalName("OPPONENT_ALL_CARDS")] OpponentAllCards = 6,
        [pbr::OriginalName("ALL_CARDS")] AllCards = 7,
      }

    }
    #endregion

  }

  public sealed partial class GameMechanicDescription : pb::IMessage<GameMechanicDescription> {
    private static readonly pb::MessageParser<GameMechanicDescription> _parser = new pb::MessageParser<GameMechanicDescription>(() => new GameMechanicDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMechanicDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMechanicDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMechanicDescription(GameMechanicDescription other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMechanicDescription Clone() {
      return new GameMechanicDescription(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMechanicDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMechanicDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMechanicDescription other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GameMechanicDescription message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("ATTACK")] Attack = 1,
        [pbr::OriginalName("DEATH")] Death = 2,
        [pbr::OriginalName("DELAYED")] Delayed = 3,
        [pbr::OriginalName("DESTROY")] Destroy = 4,
        [pbr::OriginalName("DEVOUR")] Devour = 5,
        [pbr::OriginalName("DISTRACT")] Distract = 6,
        [pbr::OriginalName("END")] End = 7,
        [pbr::OriginalName("ENTRY")] Entry = 8,
        [pbr::OriginalName("FERAL")] Feral = 9,
        [pbr::OriginalName("FLASH")] Flash = 10,
        [pbr::OriginalName("FREEZE")] Freeze = 11,
        [pbr::OriginalName("GUARD")] Guard = 12,
        [pbr::OriginalName("HEAVY")] Heavy = 13,
        [pbr::OriginalName("OVERFLOW")] Overflow = 14,
        [pbr::OriginalName("RAGE")] Rage = 15,
        [pbr::OriginalName("REANIMATE")] Reanimate = 16,
        [pbr::OriginalName("SHATTER")] Shatter = 17,
        [pbr::OriginalName("SWING")] Swing = 18,
        [pbr::OriginalName("TURN")] Turn = 19,
        [pbr::OriginalName("GOT_DAMAGE")] GotDamage = 20,
        [pbr::OriginalName("AT_DEFENSE")] AtDefense = 21,
        [pbr::OriginalName("IN_HAND")] InHand = 22,
        [pbr::OriginalName("KILL_UNIT")] KillUnit = 23,
        [pbr::OriginalName("PERMANENT")] Permanent = 24,
        [pbr::OriginalName("BLITZ")] Blitz = 25,
        [pbr::OriginalName("RESTORE")] Restore = 26,
        [pbr::OriginalName("CHAINSAW")] Chainsaw = 27,
        [pbr::OriginalName("SUPER_SERUM")] SuperSerum = 28,
        [pbr::OriginalName("AURA")] Aura = 29,
      }

    }
    #endregion

  }

  public sealed partial class AttackRestriction : pb::IMessage<AttackRestriction> {
    private static readonly pb::MessageParser<AttackRestriction> _parser = new pb::MessageParser<AttackRestriction>(() => new AttackRestriction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttackRestriction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackRestriction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackRestriction(AttackRestriction other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackRestriction Clone() {
      return new AttackRestriction(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttackRestriction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttackRestriction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttackRestriction other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttackRestriction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("ANY")] Any = 0,
        [pbr::OriginalName("ONLY_DIFFERENT")] OnlyDifferent = 1,
      }

    }
    #endregion

  }

  public sealed partial class CardAbilityBuffType : pb::IMessage<CardAbilityBuffType> {
    private static readonly pb::MessageParser<CardAbilityBuffType> _parser = new pb::MessageParser<CardAbilityBuffType>(() => new CardAbilityBuffType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAbilityBuffType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAbilityBuffType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAbilityBuffType(CardAbilityBuffType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAbilityBuffType Clone() {
      return new CardAbilityBuffType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAbilityBuffType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAbilityBuffType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAbilityBuffType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CardAbilityBuffType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("GUARD")] Guard = 1,
        [pbr::OriginalName("DEFENCE")] Defence = 2,
        [pbr::OriginalName("HEAVY")] Heavy = 3,
        [pbr::OriginalName("WEAPON")] Weapon = 4,
        [pbr::OriginalName("RUSH")] Rush = 5,
        [pbr::OriginalName("ATTACK")] Attack = 6,
        [pbr::OriginalName("FREEZE")] Freeze = 7,
        [pbr::OriginalName("DAMAGE")] Damage = 8,
        [pbr::OriginalName("HEAL_ALLY")] HealAlly = 9,
        [pbr::OriginalName("DESTROY")] Destroy = 10,
        [pbr::OriginalName("REANIMATE")] Reanimate = 11,
      }

    }
    #endregion

  }

  public sealed partial class AbilityActivity : pb::IMessage<AbilityActivity> {
    private static readonly pb::MessageParser<AbilityActivity> _parser = new pb::MessageParser<AbilityActivity>(() => new AbilityActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilityActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityActivity(AbilityActivity other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityActivity Clone() {
      return new AbilityActivity(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilityActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilityActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilityActivity other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AbilityActivity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("PASSIVE")] Passive = 1,
        [pbr::OriginalName("ACTIVE")] Active = 2,
      }

    }
    #endregion

  }

  public sealed partial class AbilityTrigger : pb::IMessage<AbilityTrigger> {
    private static readonly pb::MessageParser<AbilityTrigger> _parser = new pb::MessageParser<AbilityTrigger>(() => new AbilityTrigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilityTrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityTrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityTrigger(AbilityTrigger other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityTrigger Clone() {
      return new AbilityTrigger(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilityTrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilityTrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilityTrigger other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AbilityTrigger message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("TURN")] Turn = 1,
        [pbr::OriginalName("ENTRY")] Entry = 2,
        [pbr::OriginalName("END")] End = 3,
        [pbr::OriginalName("ATTACK")] Attack = 4,
        [pbr::OriginalName("DEATH")] Death = 5,
        [pbr::OriginalName("PERMANENT")] Permanent = 6,
        [pbr::OriginalName("GOT_DAMAGE")] GotDamage = 7,
        [pbr::OriginalName("AT_DEFENCE")] AtDefence = 8,
        [pbr::OriginalName("IN_HAND")] InHand = 9,
        [pbr::OriginalName("KILL_UNIT")] KillUnit = 10,
        [pbr::OriginalName("RAGE")] Rage = 11,
        [pbr::OriginalName("AURA")] Aura = 12,
      }

    }
    #endregion

  }

  public sealed partial class AbilityEffect : pb::IMessage<AbilityEffect> {
    private static readonly pb::MessageParser<AbilityEffect> _parser = new pb::MessageParser<AbilityEffect>(() => new AbilityEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilityEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityEffect(AbilityEffect other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityEffect Clone() {
      return new AbilityEffect(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilityEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilityEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilityEffect other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AbilityEffect message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("MASSIVE_WATER_WAVE")] MassiveWaterWave = 1,
        [pbr::OriginalName("MASSIVE_FIRE")] MassiveFire = 2,
        [pbr::OriginalName("MASSIVE_LIGHTNING")] MassiveLightning = 3,
        [pbr::OriginalName("MASSIVE_TOXIC_ALL")] MassiveToxicAll = 4,
        [pbr::OriginalName("TARGET_ROCK")] TargetRock = 5,
        [pbr::OriginalName("TARGET_FIRE")] TargetFire = 6,
        [pbr::OriginalName("TARGET_LIFE")] TargetLife = 7,
        [pbr::OriginalName("TARGET_TOXIC")] TargetToxic = 8,
        [pbr::OriginalName("TARGET_WATER")] TargetWater = 9,
        [pbr::OriginalName("TARGET_ADJUSTMENTS_BOMB")] TargetAdjustmentsBomb = 10,
        [pbr::OriginalName("STUN_FREEZES")] StunFreezes = 11,
        [pbr::OriginalName("STUN_OR_DAMAGE_FREEZES")] StunOrDamageFreezes = 12,
        [pbr::OriginalName("TARGET_ADJUSTMENTS_AIR")] TargetAdjustmentsAir = 13,
        [pbr::OriginalName("HEAL_DIRECTLY")] HealDirectly = 14,
        [pbr::OriginalName("HEAL")] Heal = 15,
      }

    }
    #endregion

  }

  public sealed partial class AbilityType : pb::IMessage<AbilityType> {
    private static readonly pb::MessageParser<AbilityType> _parser = new pb::MessageParser<AbilityType>(() => new AbilityType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilityType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityType(AbilityType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityType Clone() {
      return new AbilityType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilityType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilityType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilityType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AbilityType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("HEAL")] Heal = 1,
        [pbr::OriginalName("MODIFICATOR_STATS")] ModificatorStats = 2,
        [pbr::OriginalName("CHANGE_STAT")] ChangeStat = 3,
        [pbr::OriginalName("STUN")] Stun = 4,
        [pbr::OriginalName("STUN_OR_DAMAGE_ADJUSTMENTS")] StunOrDamageAdjustments = 5,
        [pbr::OriginalName("SPURT")] Spurt = 6,
        [pbr::OriginalName("ADD_GOO_VIAL")] AddGooVial = 7,
        [pbr::OriginalName("ADD_GOO_CARRIER")] AddGooCarrier = 8,
        [pbr::OriginalName("DOT")] Dot = 9,
        [pbr::OriginalName("SUMMON")] Summon = 10,
        [pbr::OriginalName("SPELL_ATTACK")] SpellAttack = 11,
        [pbr::OriginalName("MASSIVE_DAMAGE")] MassiveDamage = 12,
        [pbr::OriginalName("DAMAGE_TARGET_ADJUSTMENTS")] DamageTargetAdjustments = 13,
        [pbr::OriginalName("DAMAGE_TARGET")] DamageTarget = 14,
        [pbr::OriginalName("CARD_RETURN")] CardReturn = 15,
        [pbr::OriginalName("WEAPON")] Weapon = 16,
        [pbr::OriginalName("CHANGE_STAT_OF_CREATURES_BY_TYPE")] ChangeStatOfCreaturesByType = 17,
        [pbr::OriginalName("ATTACK_NUMBER_OF_TIMES_PER_TURN")] AttackNumberOfTimesPerTurn = 18,
        [pbr::OriginalName("DRAW_CARD")] DrawCard = 19,
        [pbr::OriginalName("DEVOUR_ZOMBIES_AND_COMBINE_STATS")] DevourZombiesAndCombineStats = 20,
        [pbr::OriginalName("DESTROY_UNIT_BY_TYPE")] DestroyUnitByType = 21,
        [pbr::OriginalName("LOWER_COST_OF_CARD_IN_HAND")] LowerCostOfCardInHand = 22,
        [pbr::OriginalName("OVERFLOW_GOO")] OverflowGoo = 23,
        [pbr::OriginalName("LOSE_GOO")] LoseGoo = 24,
        [pbr::OriginalName("DISABLE_NEXT_TURN_GOO")] DisableNextTurnGoo = 25,
        [pbr::OriginalName("RAGE")] Rage = 26,
        [pbr::OriginalName("FREEZE_UNITS")] FreezeUnits = 27,
        [pbr::OriginalName("TAKE_DAMAGE_RANDOM_ENEMY")] TakeDamageRandomEnemy = 28,
        [pbr::OriginalName("TAKE_CONTROL_ENEMY_UNIT")] TakeControlEnemyUnit = 29,
        [pbr::OriginalName("GUARD")] Guard = 30,
        [pbr::OriginalName("DESTROY_FROZEN_UNIT")] DestroyFrozenUnit = 31,
        [pbr::OriginalName("USE_ALL_GOO_TO_INCREASE_STATS")] UseAllGooToIncreaseStats = 32,
        [pbr::OriginalName("FIRST_UNIT_IN_PLAY")] FirstUnitInPlay = 33,
        [pbr::OriginalName("ALLY_UNITS_OF_TYPE_IN_PLAY_GET_STATS")] AllyUnitsOfTypeInPlayGetStats = 34,
        [pbr::OriginalName("DAMAGE_ENEMY_UNITS_AND_FREEZE_THEM")] DamageEnemyUnitsAndFreezeThem = 35,
        [pbr::OriginalName("RETURN_UNITS_ON_BOARD_TO_OWNERS_DECKS")] ReturnUnitsOnBoardToOwnersDecks = 36,
        [pbr::OriginalName("TAKE_UNIT_TYPE_TO_ADJACENT_ALLY_UNITS")] TakeUnitTypeToAdjacentAllyUnits = 37,
        [pbr::OriginalName("ENEMY_THAT_ATTACKS_BECOME_FROZEN")] EnemyThatAttacksBecomeFrozen = 38,
        [pbr::OriginalName("TAKE_UNIT_TYPE_TO_ALLY_UNIT")] TakeUnitTypeToAllyUnit = 39,
        [pbr::OriginalName("REVIVE_DIED_UNITS_OF_TYPE_FROM_MATCH")] ReviveDiedUnitsOfTypeFromMatch = 40,
        [pbr::OriginalName("CHANGE_STAT_UNTILL_END_OF_TURN")] ChangeStatUntillEndOfTurn = 41,
        [pbr::OriginalName("ATTACK_OVERLORD")] AttackOverlord = 42,
        [pbr::OriginalName("ADJACENT_UNITS_GET_HEAVY")] AdjacentUnitsGetHeavy = 43,
        [pbr::OriginalName("FREEZE_NUMBER_OF_RANDOM_ALLY")] FreezeNumberOfRandomAlly = 44,
        [pbr::OriginalName("ADD_CARD_BY_NAME_TO_HAND")] AddCardByNameToHand = 45,
        [pbr::OriginalName("DEAL_DAMAGE_TO_THIS_AND_ADJACENT_UNITS")] DealDamageToThisAndAdjacentUnits = 46,
        [pbr::OriginalName("SWING")] Swing = 47,
        [pbr::OriginalName("TAKE_DEFENSE_IF_OVERLORD_HAS_LESS_DEFENSE_THAN")] TakeDefenseIfOverlordHasLessDefenseThan = 48,
        [pbr::OriginalName("GAIN_NUMBER_OF_LIFE_FOR_EACH_DAMAGE_THIS_DEALS")] GainNumberOfLifeForEachDamageThisDeals = 49,
        [pbr::OriginalName("ADDITIONAL_DAMAGE_TO_HEAVY_IN_ATTACK")] AdditionalDamageToHeavyInAttack = 50,
        [pbr::OriginalName("UNIT_WEAPON")] UnitWeapon = 51,
        [pbr::OriginalName("TAKE_DAMAGE_AT_END_OF_TURN_TO_THIS")] TakeDamageAtEndOfTurnToThis = 52,
        [pbr::OriginalName("DELAYED_LOSE_HEAVY_GAIN_ATTACK")] DelayedLoseHeavyGainAttack = 53,
        [pbr::OriginalName("DELAYED_GAIN_ATTACK")] DelayedGainAttack = 54,
        [pbr::OriginalName("REANIMATE_UNIT")] ReanimateUnit = 55,
        [pbr::OriginalName("PRIORITY_ATTACK")] PriorityAttack = 56,
        [pbr::OriginalName("DESTROY_TARGET_UNIT_AFTER_ATTACK")] DestroyTargetUnitAfterAttack = 57,
        [pbr::OriginalName("COSTS_LESS_IF_CARD_TYPE_IN_HAND")] CostsLessIfCardTypeInHand = 58,
        [pbr::OriginalName("RETURN_UNITS_ON_BOARD_TO_OWNERS_HANDS")] ReturnUnitsOnBoardToOwnersHands = 59,
        [pbr::OriginalName("REPLACE_UNITS_WITH_TYPE_ON_STRONGER_ONES")] ReplaceUnitsWithTypeOnStrongerOnes = 60,
        [pbr::OriginalName("RESTORE_DEF_RANDOMLY_SPLIT")] RestoreDefRandomlySplit = 61,
        [pbr::OriginalName("ADJACENT_UNITS_GET_GUARD")] AdjacentUnitsGetGuard = 62,
        [pbr::OriginalName("SUMMON_UNIT_FROM_HAND")] SummonUnitFromHand = 63,
        [pbr::OriginalName("DAMAGE_AND_DISTRACT_TARGET")] DamageAndDistractTarget = 64,
        [pbr::OriginalName("DRAW_CARD_IF_DAMAGED_ZOMBIE_IN_PLAY")] DrawCardIfDamagedZombieInPlay = 65,
        [pbr::OriginalName("TAKE_STAT_IF_OVERLORD_HAS_LESS_DEFENSE_THAN")] TakeStatIfOverlordHasLessDefenseThan = 66,
        [pbr::OriginalName("DAMAGE_OVERLORD_ON_COUNT_ITEMS_PLAYED")] DamageOverlordOnCountItemsPlayed = 67,
        [pbr::OriginalName("SHUFFLE_THIS_CARD_TO_DECK")] ShuffleThisCardToDeck = 68,
        [pbr::OriginalName("TAKE_DEFENSE_TO_OVERLORD_WITH_DEFENSE")] TakeDefenseToOverlordWithDefense = 69,
        [pbr::OriginalName("PUT_RANDOM_UNIT_FROM_DECK_ON_BOARD")] PutRandomUnitFromDeckOnBoard = 70,
        [pbr::OriginalName("DISTRACT")] Distract = 71,
        [pbr::OriginalName("DAMAGE_TARGET_FREEZE_IT_IF_SURVIVES")] DamageTargetFreezeItIfSurvives = 72,
        [pbr::OriginalName("DESTROY_UNIT_BY_COST")] DestroyUnitByCost = 73,
        [pbr::OriginalName("DAMAGE_ENEMY_OR_RESTORE_DEFENSE_ALLY")] DamageEnemyOrRestoreDefenseAlly = 74,
        [pbr::OriginalName("TAKE_SWING_TO_UNITS")] TakeSwingToUnits = 75,
        [pbr::OriginalName("DELAYED_PLACE_COPIES_IN_PLAY_DESTROY_UNIT")] DelayedPlaceCopiesInPlayDestroyUnit = 76,
        [pbr::OriginalName("ADJACENT_UNITS_GET_STAT")] AdjacentUnitsGetStat = 77,
        [pbr::OriginalName("EXTRA_GOO_IF_UNIT_IN_PLAY")] ExtraGooIfUnitInPlay = 78,
        [pbr::OriginalName("DESTROY_UNITS")] DestroyUnits = 79,
        [pbr::OriginalName("DEAL_DAMAGE_TO_UNIT_AND_SWING")] DealDamageToUnitAndSwing = 80,
        [pbr::OriginalName("SET_ATTACK_AVAILABILITY")] SetAttackAvailability = 81,
        [pbr::OriginalName("CHOOSABLE_ABILITIES")] ChoosableAbilities = 82,
        [pbr::OriginalName("COSTS_LESS_IF_CARD_TYPE_IN_PLAY")] CostsLessIfCardTypeInPlay = 83,
        [pbr::OriginalName("GAIN_GOO")] GainGoo = 84,
        [pbr::OriginalName("BLITZ")] Blitz = 85,
        [pbr::OriginalName("DRAW_CARD_BY_FACTION")] DrawCardByFaction = 86,
        [pbr::OriginalName("DESTROY_TARGET_UNIT")] DestroyTargetUnit = 87,
        [pbr::OriginalName("AGILE")] Agile = 88,
        [pbr::OriginalName("CHANGE_STAT_OF_CARDS_IN_HAND")] ChangeStatOfCardsInHand = 89,
        [pbr::OriginalName("GIVE_BUFFS_TO_UNIT")] GiveBuffsToUnit = 90,
        [pbr::OriginalName("DISCARD_CARD_FROM_HAND")] DiscardCardFromHand = 91,
        [pbr::OriginalName("GET_GOO_THIS_TURN")] GetGooThisTurn = 92,
        [pbr::OriginalName("COSTS_LESS")] CostsLess = 93,
        [pbr::OriginalName("FILL_BOARD_BY_UNITS")] FillBoardByUnits = 94,
        [pbr::OriginalName("DEAL_DAMAGE_TO_TARGET_THAT_ATTACK_THIS")] DealDamageToTargetThatAttackThis = 95,
        [pbr::OriginalName("CHANGE_COST")] ChangeCost = 96,
        [pbr::OriginalName("GAIN_STATS_OF_ADJACENT_UNITS")] GainStatsOfAdjacentUnits = 97,
        [pbr::OriginalName("DISTRACT_AND_CHANGE_STAT")] DistractAndChangeStat = 98,
        [pbr::OriginalName("DAMAGE_AND_DISTRACT")] DamageAndDistract = 99,
        [pbr::OriginalName("PUT_UNITS_FROM_DISCARD_INTO_PLAY")] PutUnitsFromDiscardIntoPlay = 100,
        [pbr::OriginalName("PUT_UNITS_FRON_LIBRARY_INTO_PLAY")] PutUnitsFronLibraryIntoPlay = 101,
        [pbr::OriginalName("BLOCK_TAKE_DAMAGE")] BlockTakeDamage = 102,
        [pbr::OriginalName("TAKE_UNIT_TYPE_TO_TARGET_UNIT")] TakeUnitTypeToTargetUnit = 103,
        [pbr::OriginalName("CHANGE_STAT_THIS_TURN")] ChangeStatThisTurn = 104,
      }

    }
    #endregion

  }

  public sealed partial class AbilitySubTrigger : pb::IMessage<AbilitySubTrigger> {
    private static readonly pb::MessageParser<AbilitySubTrigger> _parser = new pb::MessageParser<AbilitySubTrigger>(() => new AbilitySubTrigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilitySubTrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilitySubTrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilitySubTrigger(AbilitySubTrigger other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilitySubTrigger Clone() {
      return new AbilitySubTrigger(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilitySubTrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilitySubTrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilitySubTrigger other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AbilitySubTrigger message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("OnlyThisUnitInPlay")] OnlyThisUnitInPlay = 1,
        [pbr::OriginalName("AllOtherAllyUnitsInPlay")] AllOtherAllyUnitsInPlay = 2,
        [pbr::OriginalName("AllAllyUnitsInPlay")] AllAllyUnitsInPlay = 3,
        [pbr::OriginalName("RandomUnit")] RandomUnit = 4,
        [pbr::OriginalName("AllEnemyUnitsInPlay")] AllEnemyUnitsInPlay = 5,
        [pbr::OriginalName("AllAllyUnitsByFactionInPlay")] AllAllyUnitsByFactionInPlay = 6,
        [pbr::OriginalName("ForEachFactionOfUnitInHand")] ForEachFactionOfUnitInHand = 7,
        [pbr::OriginalName("IfHasUnitsWithFactionInPlay")] IfHasUnitsWithFactionInPlay = 8,
        [pbr::OriginalName("AllyUnitsByFactionThatCost")] AllyUnitsByFactionThatCost = 9,
        [pbr::OriginalName("YourOverlord")] YourOverlord = 10,
        [pbr::OriginalName("PermanentChanges")] PermanentChanges = 11,
        [pbr::OriginalName("HasChangesInParameters")] HasChangesInParameters = 12,
        [pbr::OriginalName("LessDefThanInOpponent")] LessDefThanInOpponent = 13,
        [pbr::OriginalName("OverlordDefenseEqualOrLess")] OverlordDefenseEqualOrLess = 14,
        [pbr::OriginalName("OnlyThisCardInHand")] OnlyThisCardInHand = 15,
        [pbr::OriginalName("AllCardsInHand")] AllCardsInHand = 16,
        [pbr::OriginalName("CardCostMoreThanCostOfThis")] CardCostMoreThanCostOfThis = 17,
        [pbr::OriginalName("ForEachEnemyUnitInPlay")] ForEachEnemyUnitInPlay = 18,
        [pbr::OriginalName("ForEachAllyUnitInPlay")] ForEachAllyUnitInPlay = 19,
        [pbr::OriginalName("IfHaveFewerUnitsInPlay")] IfHaveFewerUnitsInPlay = 20,
        [pbr::OriginalName("ToOpponentOverlord")] ToOpponentOverlord = 21,
        [pbr::OriginalName("UntilStartOfNextPlayerTurn")] UntilStartOfNextPlayerTurn = 22,
        [pbr::OriginalName("DuringCardInHand")] DuringCardInHand = 23,
        [pbr::OriginalName("ForEachUnitInPlay")] ForEachUnitInPlay = 24,
        [pbr::OriginalName("HighestCost")] HighestCost = 25,
        [pbr::OriginalName("EqualToUnitAttack")] EqualToUnitAttack = 26,
        [pbr::OriginalName("NumberOfUnspentGoo")] NumberOfUnspentGoo = 27,
      }

    }
    #endregion

  }

  public sealed partial class Zone : pb::IMessage<Zone> {
    private static readonly pb::MessageParser<Zone> _parser = new pb::MessageParser<Zone>(() => new Zone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Zone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zone(Zone other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zone Clone() {
      return new Zone(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Zone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Zone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Zone other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Zone message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum type {
        [pbr::OriginalName("PLAY")] Play = 0,
        [pbr::OriginalName("DECK")] Deck = 1,
        [pbr::OriginalName("HAND")] Hand = 2,
        [pbr::OriginalName("GRAVEYARD")] Graveyard = 3,
        [pbr::OriginalName("REMOVEFROMGAME")] Removefromgame = 4,
        [pbr::OriginalName("SETASIDE")] Setaside = 5,
        [pbr::OriginalName("SECRET")] Secret = 6,
      }

    }
    #endregion

  }

  public sealed partial class PlayerActionType : pb::IMessage<PlayerActionType> {
    private static readonly pb::MessageParser<PlayerActionType> _parser = new pb::MessageParser<PlayerActionType>(() => new PlayerActionType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerActionType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionType(PlayerActionType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerActionType Clone() {
      return new PlayerActionType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerActionType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerActionType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerActionType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerActionType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("EndTurn")] EndTurn = 1,
        [pbr::OriginalName("Mulligan")] Mulligan = 2,
        [pbr::OriginalName("CardPlay")] CardPlay = 3,
        [pbr::OriginalName("CardAttack")] CardAttack = 4,
        [pbr::OriginalName("CardAbilityUsed")] CardAbilityUsed = 5,
        [pbr::OriginalName("OverlordSkillUsed")] OverlordSkillUsed = 6,
        [pbr::OriginalName("LeaveMatch")] LeaveMatch = 7,
        [pbr::OriginalName("RankBuff")] RankBuff = 8,
        [pbr::OriginalName("CheatDestroyCardsOnBoard")] CheatDestroyCardsOnBoard = 9,
      }

    }
    #endregion

  }

  public sealed partial class OverlordSkillType : pb::IMessage<OverlordSkillType> {
    private static readonly pb::MessageParser<OverlordSkillType> _parser = new pb::MessageParser<OverlordSkillType>(() => new OverlordSkillType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlordSkillType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlordSkillType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlordSkillType(OverlordSkillType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlordSkillType Clone() {
      return new OverlordSkillType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlordSkillType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlordSkillType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlordSkillType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OverlordSkillType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// AIR
        /// </summary>
        [pbr::OriginalName("PUSH")] Push = 1,
        [pbr::OriginalName("DRAW")] Draw = 2,
        [pbr::OriginalName("WIND_SHIELD")] WindShield = 3,
        [pbr::OriginalName("LEVITATE")] Levitate = 4,
        [pbr::OriginalName("RETREAT")] Retreat = 5,
        /// <summary>
        /// EARTH
        /// </summary>
        [pbr::OriginalName("HARDEN")] Harden = 6,
        [pbr::OriginalName("STONE_SKIN")] StoneSkin = 7,
        [pbr::OriginalName("FORTIFY")] Fortify = 8,
        [pbr::OriginalName("PHALANX")] Phalanx = 9,
        [pbr::OriginalName("FORTRESS")] Fortress = 10,
        /// <summary>
        /// FIRE
        /// </summary>
        [pbr::OriginalName("FIRE_BOLT")] FireBolt = 11,
        [pbr::OriginalName("RABIES")] Rabies = 12,
        [pbr::OriginalName("FIREBALL")] Fireball = 13,
        [pbr::OriginalName("MASS_RABIES")] MassRabies = 14,
        [pbr::OriginalName("METEOR_SHOWER")] MeteorShower = 15,
        /// <summary>
        /// LIFE
        /// </summary>
        [pbr::OriginalName("HEALING_TOUCH")] HealingTouch = 16,
        [pbr::OriginalName("MEND")] Mend = 17,
        [pbr::OriginalName("RESSURECT")] Ressurect = 18,
        [pbr::OriginalName("ENHANCE")] Enhance = 19,
        [pbr::OriginalName("REANIMATE")] Reanimate = 20,
        /// <summary>
        /// TOXIC
        /// </summary>
        [pbr::OriginalName("POISON_DART")] PoisonDart = 21,
        [pbr::OriginalName("TOXIC_POWER")] ToxicPower = 22,
        [pbr::OriginalName("BREAKOUT")] Breakout = 23,
        [pbr::OriginalName("INFECT")] Infect = 24,
        [pbr::OriginalName("EPIDEMIC")] Epidemic = 25,
        /// <summary>
        /// WATER
        /// </summary>
        [pbr::OriginalName("FREEZE")] Freeze = 26,
        [pbr::OriginalName("ICE_BOLT")] IceBolt = 27,
        [pbr::OriginalName("ICE_WALL")] IceWall = 28,
        [pbr::OriginalName("SHATTER")] Shatter = 29,
        [pbr::OriginalName("BLIZZARD")] Blizzard = 30,
      }

    }
    #endregion

  }

  public sealed partial class Stat : pb::IMessage<Stat> {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat(Stat other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat Clone() {
      return new Stat(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Stat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("DEFENSE")] Defense = 1,
        /// <summary>
        /// for backwards compatibility
        /// </summary>
        [pbr::OriginalName("HEALTH", PreferredAlias = false)] Health = 1,
        [pbr::OriginalName("DAMAGE")] Damage = 2,
      }

    }
    #endregion

  }

  public sealed partial class UnitSpecialStatus : pb::IMessage<UnitSpecialStatus> {
    private static readonly pb::MessageParser<UnitSpecialStatus> _parser = new pb::MessageParser<UnitSpecialStatus>(() => new UnitSpecialStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitSpecialStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSpecialStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSpecialStatus(UnitSpecialStatus other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitSpecialStatus Clone() {
      return new UnitSpecialStatus(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitSpecialStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitSpecialStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitSpecialStatus other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UnitSpecialStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("FROZEN")] Frozen = 1,
      }

    }
    #endregion

  }

  public sealed partial class AIType : pb::IMessage<AIType> {
    private static readonly pb::MessageParser<AIType> _parser = new pb::MessageParser<AIType>(() => new AIType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AIType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIType(AIType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIType Clone() {
      return new AIType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AIType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AIType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AIType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AIType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("BLITZ_AI")] BlitzAi = 1,
        [pbr::OriginalName("DEFENSE_AI")] DefenseAi = 2,
        [pbr::OriginalName("MIXED_AI")] MixedAi = 3,
        [pbr::OriginalName("MIXED_BLITZ_AI")] MixedBlitzAi = 4,
        [pbr::OriginalName("TIME_BLITZ_AI")] TimeBlitzAi = 5,
        [pbr::OriginalName("MIXED_DEFENSE_AI")] MixedDefenseAi = 6,
      }

    }
    #endregion

  }

  public sealed partial class ExperienceActionType : pb::IMessage<ExperienceActionType> {
    private static readonly pb::MessageParser<ExperienceActionType> _parser = new pb::MessageParser<ExperienceActionType>(() => new ExperienceActionType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExperienceActionType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceActionType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceActionType(ExperienceActionType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExperienceActionType Clone() {
      return new ExperienceActionType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExperienceActionType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExperienceActionType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExperienceActionType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExperienceActionType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("KillOverlord")] KillOverlord = 0,
        [pbr::OriginalName("KillMinion")] KillMinion = 1,
        [pbr::OriginalName("PlayCard")] PlayCard = 2,
        [pbr::OriginalName("ActivateRankAbility")] ActivateRankAbility = 3,
        [pbr::OriginalName("UseOverlordAbility")] UseOverlordAbility = 4,
      }

    }
    #endregion

  }

  public sealed partial class CardKindEnumValue : pb::IMessage<CardKindEnumValue> {
    private static readonly pb::MessageParser<CardKindEnumValue> _parser = new pb::MessageParser<CardKindEnumValue>(() => new CardKindEnumValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardKindEnumValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKindEnumValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKindEnumValue(CardKindEnumValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKindEnumValue Clone() {
      return new CardKindEnumValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Loom.ZombieBattleground.Protobuf.CardKind.Types.Enum value_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.CardKind.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardKindEnumValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardKindEnumValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardKindEnumValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            value_ = (global::Loom.ZombieBattleground.Protobuf.CardKind.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FactionEnumValue : pb::IMessage<FactionEnumValue> {
    private static readonly pb::MessageParser<FactionEnumValue> _parser = new pb::MessageParser<FactionEnumValue>(() => new FactionEnumValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FactionEnumValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactionEnumValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactionEnumValue(FactionEnumValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactionEnumValue Clone() {
      return new FactionEnumValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Loom.ZombieBattleground.Protobuf.Faction.Types.Enum value_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.Faction.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FactionEnumValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FactionEnumValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FactionEnumValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            value_ = (global::Loom.ZombieBattleground.Protobuf.Faction.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatureRankEnumValue : pb::IMessage<CreatureRankEnumValue> {
    private static readonly pb::MessageParser<CreatureRankEnumValue> _parser = new pb::MessageParser<CreatureRankEnumValue>(() => new CreatureRankEnumValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatureRankEnumValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRankEnumValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRankEnumValue(CreatureRankEnumValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatureRankEnumValue Clone() {
      return new CreatureRankEnumValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Loom.ZombieBattleground.Protobuf.CreatureRank.Types.Enum value_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.CreatureRank.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatureRankEnumValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatureRankEnumValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatureRankEnumValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            value_ = (global::Loom.ZombieBattleground.Protobuf.CreatureRank.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardTypeEnumValue : pb::IMessage<CardTypeEnumValue> {
    private static readonly pb::MessageParser<CardTypeEnumValue> _parser = new pb::MessageParser<CardTypeEnumValue>(() => new CardTypeEnumValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardTypeEnumValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTypeEnumValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTypeEnumValue(CardTypeEnumValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardTypeEnumValue Clone() {
      return new CardTypeEnumValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Loom.ZombieBattleground.Protobuf.CardType.Types.Enum value_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.CardType.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardTypeEnumValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardTypeEnumValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardTypeEnumValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            value_ = (global::Loom.ZombieBattleground.Protobuf.CardType.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UniqueAnimationEnumValue : pb::IMessage<UniqueAnimationEnumValue> {
    private static readonly pb::MessageParser<UniqueAnimationEnumValue> _parser = new pb::MessageParser<UniqueAnimationEnumValue>(() => new UniqueAnimationEnumValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UniqueAnimationEnumValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimationEnumValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimationEnumValue(UniqueAnimationEnumValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueAnimationEnumValue Clone() {
      return new UniqueAnimationEnumValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Loom.ZombieBattleground.Protobuf.UniqueAnimation.Types.Enum value_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.UniqueAnimation.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UniqueAnimationEnumValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UniqueAnimationEnumValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UniqueAnimationEnumValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            value_ = (global::Loom.ZombieBattleground.Protobuf.UniqueAnimation.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
