// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/loomnetwork/gamechain/types/zb/zb_custombase/zb_custombase.proto-cs
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Loom.Google.Protobuf;
using pbc = global::Loom.Google.Protobuf.Collections;
using pbr = global::Loom.Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Loom.ZombieBattleground.Protobuf {

  /// <summary>Holder for reflection information generated from github.com/loomnetwork/gamechain/types/zb/zb_custombase/zb_custombase.proto-cs</summary>
  public static partial class ZbCustombaseReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/loomnetwork/gamechain/types/zb/zb_custombase/zb_custombase.proto-cs</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZbCustombaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ck5naXRodWIuY29tL2xvb21uZXR3b3JrL2dhbWVjaGFpbi90eXBlcy96Yi96",
            "Yl9jdXN0b21iYXNlL3piX2N1c3RvbWJhc2UucHJvdG8tY3MaQWdpdGh1Yi5j",
            "b20vbG9vbW5ldHdvcmsvZ2FtZWNoYWluL3R5cGVzL3piL3piX2VudW1zL3pi",
            "X2VudW1zLnByb3RvIj4KB0NhcmRLZXkSDwoHbW91bGRJZBgBIAEoAxIiCgd2",
            "YXJpYW50GAIgASgOMhEuQ2FyZFZhcmlhbnQuRW51bUIjqgIgTG9vbS5ab21i",
            "aWVCYXR0bGVncm91bmQuUHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Loom.ZombieBattleground.Protobuf.ZbEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Loom.ZombieBattleground.Protobuf.CardKey), global::Loom.ZombieBattleground.Protobuf.CardKey.Parser, new[]{ "MouldId", "Variant" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CardKey : pb::IMessage<CardKey> {
    private static readonly pb::MessageParser<CardKey> _parser = new pb::MessageParser<CardKey>(() => new CardKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Loom.ZombieBattleground.Protobuf.ZbCustombaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKey(CardKey other) : this() {
      mouldId_ = other.mouldId_;
      variant_ = other.variant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardKey Clone() {
      return new CardKey(this);
    }

    /// <summary>Field number for the "mouldId" field.</summary>
    public const int MouldIdFieldNumber = 1;
    private long mouldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MouldId {
      get { return mouldId_; }
      set {
        mouldId_ = value;
      }
    }

    /// <summary>Field number for the "variant" field.</summary>
    public const int VariantFieldNumber = 2;
    private global::Loom.ZombieBattleground.Protobuf.CardVariant.Types.Enum variant_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Loom.ZombieBattleground.Protobuf.CardVariant.Types.Enum Variant {
      get { return variant_; }
      set {
        variant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MouldId != other.MouldId) return false;
      if (Variant != other.Variant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MouldId != 0L) hash ^= MouldId.GetHashCode();
      if (Variant != 0) hash ^= Variant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MouldId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MouldId);
      }
      if (Variant != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Variant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MouldId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MouldId);
      }
      if (Variant != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Variant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardKey other) {
      if (other == null) {
        return;
      }
      if (other.MouldId != 0L) {
        MouldId = other.MouldId;
      }
      if (other.Variant != 0) {
        Variant = other.Variant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MouldId = input.ReadInt64();
            break;
          }
          case 16: {
            variant_ = (global::Loom.ZombieBattleground.Protobuf.CardVariant.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
